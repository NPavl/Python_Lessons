# Словари (dict)
# В питоне словари это по сути ассоциативный массивы , что такое ассоциативнй маcсив :

# к примеру в списках мы писали так : a = [234, 345 ] азного элимента и под своим индексом , в
# словарях эти индексы пропущены вместо них присутствую ключи к примеру,
# в питоне есть 4 разных метода благодаря которым мы можем создавать словари :

# 1 пример:

d = {}
print (d) # пцстой словарь


d = {'test' : 1} # для заполнения словаря используются ключи здесь ключ test
print (d['test']) #  соо-но ввывод 1 (тоесть опять же у этого ключа test значение 1)


d = {'test' : 1, 'test_2' : 3, 'test_3' : "iuyiuy"}
print (d['test_2']) # вывод   iuyiuy
print (d) # вывод    {'test': 1, 'test_2': 3, 'test_3': 'iuyiuy'}


# вот такой вариант записи подробнее      https://python-scripts.com/loops-for-while
a_dict = {"one": 1, "two": 2, "three": 3}
for key in a_dict:
    print(key)


d = dict (short='dict', longer='dictionary')
d ['short'] = 234 # пример того что мы также при необходимости можем поменять значение short


d = dict ([(23, 35), (45, 34)]) # по сути внутри словаря создать список и в него поместить несколько значений
print (d) # на вывод имеем что 23 это ключ 35 это его значение и 45 ключ а 34 его значение  {23: 35, 45: 34}


d = dict.fromkeys (['a', 'b'])  # используем dict + функция fromkeys 'изключей'
print (d) # здесь для всех ключей которые мы создавали (a и b) бдет значение None {'a': None, 'b': None}


d = dict.fromkeys (['a', 'b'], 1)
print (d) # {'a': 1, 'b': 1} здесь для всех ключей которые мы создавали (a и b) бдет значение 1


# Для повторения цикла некоторое заданное число раз n можно использовать цикл for вместе с функцией range:
# for i in range(n):
#    Тело цикла

d = {a : a ** 2 for a in range (7)} # здесь спомощью цикла мы возводим в степень числа от 0 до 6 (7 раз подряд)
print (d) # {0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36}


# В этом примере мы создали переменню Person (человек) у него есть какие то данные name, address, phone
# Это словарь - в нем мы присваеваем ключ (name, address, phone)
# cловарь name имеет еще один ключ last_name и у этого ключа свои значения(Иванов - Иван - Иванович)
# также создали дополнительный ключь address у него значением этого ключа явл обычный список у которого
# есть: город - улица - квартира
# третий ключ это phone , у него есть словарь в которм также есть ключи (home_phone, mobile_phone, mobile_phone_2)
person = {'name' : {'last_name': 'Иванов', 'first_name': 'Иван', 'middle_name': 'Иванович'}, 'address':
    ['г. Андрюшки ', 'ул. Васильковская д. 23б', 'кв.12'], 'phone': {'home_phone': '56-34-56','mobile_phone':
                                                                     '8-029-657-87-90', 'mobile_phone_2': 'Нет'}}

print (person) # {'name': {'last_name': 'Иванов', 'first_name': 'Иван', 'middle_name': 'Иванович'},
               # 'address': ['г. Андрюшки ', 'ул. Васильковская д. 23б', 'кв.12'], 'phone':
               # {'home_phone': '56-34-56', 'mobile_pone': '8-029-657-87-90', 'mobile_phone_2': 'Нет'}}

print (person['name']) # выводим ключ name {'last_name': 'Иванов', 'first_name': 'Иван', 'middle_name': 'Иванович'}

print (person['name']['first_name']) # выводим ключ name - first_name:    Иван

print (person['address'][1]) # ул. Васильковская д. 23б  (здесь словарь данные берем не по ключу а по индексу)

person['address'][1] = 'ул. Вселкавая д.5'  # можем присвоить новое значение
print (person['address'][1]) #  ул. Вселкавая д.5

print (person['phone']['mobile_phone']) # 8-029-657-87-90

#==================================================================================================================

# Методы словарей: https://itproger.com/course/python/10




