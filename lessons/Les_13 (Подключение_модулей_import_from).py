# help('modules') посмотреть список всех загруженных модулей.

# ДАННЫЙ УРОК ОЧЕНЬ НУЖНЫЙ !
# Модули очен полезны мы можем подключат сторонние програмки модулей (random math и т д) также писат свои модули
# в данном случае у нас удет не все в одном файле кода программы а в разных файлах это огромное преймущесво
# Ну и конечно же это подключение сторонних модулей от сторонних разработчиков которые позволят вам получить доступ
# к какому либо сайту или  каому либо приложению и соот-но брать из этого сайта или приложения информацию и выводить
# ее пользователю. К примеру показать время в разных городах  или что то другое.
#__________________________________________________________________________________________________________________

# Подключение модулей - import modules
# Работа с модулями: создание, подключение инструкциями import и from

# В данном уроке мы будем и создавать cвои моlули и подключать стандартные:

# к примеру time - модуль для работы со временем https://pythonworld.ru/moduli/modul-time.html )
# вы можете использовать модули
# из стандартной библиотеки , можно использовать модули о сторонних разработчиков на каком небудь
# стороннем сайте например чобы узнат погоду на каком либо сайте (через какой либо сайт) , ну и кончно
# мы можем использовать свои собственные модули

# чтобы посмотреть всех и функции (гугли нужный тебе модуль
#
#  Все модули невозможно запомнить, а главное это не нужно делать.
# Вам необходимо лишь понимать какой модуль за что отвечает и в случае необходимости вы сможете
# подсмотреть документацию, которой в интернете полным полно. К примеру, вы хотите создать
# архив или добавить что-либо в старый? Тогда вам понадобиться модуль ZipFile, который позволяет
# работать с архивами: создавать их, добавлять файлы, удалять файлы и делать другие вещи.
# Таких модулей огромное множество и каждый отвечает за какие-либо функции и новшества.

# * Модули в Питоне могут быть напиcаны не толко на языке Питон также на
# языке С или С++ далее мы просто подключаем их

# для начала импортиум сандартную библиотеку , для импортирования какого либо модуля нам необходимо
# исп ключевое слово import после чего нам необходимо назвать его

import math
print (math.e) # 2.718281828459045  (просто выводим какое то число)
print (math.pi) # 3.141592653589793 (просто выводим какое то число)
print (math.cos (1)) # 0.5403023058681397 или такое cos числа 1
# в данных приерах мы видим что что данный модуль нам проводит расчеты и выдает результат

# подключаем две библиотеки через запятую time и os , так мы можем подключать и другие модули сколко нам нужно.
#  по совету автора лучше подлючать каждую библиоеку через пробел
import time
import os
import platform
import random as r # (as r означает что я обраился к анному модулю через псевдоним теперь мы можем обращаться к нему
                   # через r )


print (time.time ()) # модуль тайм в него добавляем функцию тайм и просто выводим время: 1519564341.48731
                     # (это количество секунд коорое прошло с 1 янв 1970 года)
                     # https://pythonworld.ru/moduli/modul-time.html  Модуль time спико функций данног модуля


print (os.getcwd ()) # D:\Python_Lessons\lessons (даной фунции мы получи путь где находится наш учебный файл)
# print (os.uname ()) #  инфорация про наш комипютер
print (platform.uname ()) #  инфорация про наш компьютер:
                          # uname_result(system='Windows', node='DESKTOP-G1996U4', release='10', version='10.0.14393',
                          # machine='AMD64', processor='Intel64 Family 6 Model 58 Stepping 9, GenuineIntel')
print (r.random()) # данной функций просто получим рандомное число от 0 до 1  0.5692002946179502 . и весто random
                   # обращаемся к нему через псевдоним r

# Если мы не уверены в налчии какоголибо модуля (что он есть у нас в доступном списке)
# мы можем написать следующую конструкцию коорая и проверит на наличие данного модуля: и если нет
# то при компиляции нам выдадется ImportError (Модуля несуществует):
try:
    import name_module
except ImportError:
    print ("Модуля name_module не существует") # "Модуля name_module не существует"
print (r.random ())


# Теперь оздадим свой модуль , в папке trening я создал файл с название module.py тепер импортируем его :
import module # подключаем созданный нами модуль (module.py)
# import module as m  также можно писать псивданим m.hi , m.add ;

module.hi () # вызываем наш модуль с функцией def hi (module.py) : Hello
print (module.add (45, 15)) # вызываем наш вторую функцию def add (module.py) : 60


# from module import (hi, add) можно также вызываеть одельные ункции из модудля таким образом (даже можн не ставить скобки)

from module import hi, add
hi () # Hello
print (add (45, 15)) # 60
                         # данной записью мы говорим что из нашего модуля нам нужно импортировать только определенные
                         # функции hi, add (тем самым мы можем к ней проще обращаться при вызове не нужно писать
                         # конструкции как на примере выше module.add или module.hi ..

from module import hi as h, add as a         # и даже при вызове функции мы можем использовать псевдоним к премеру вместо
                                         # add писать a вместо hi писать h

h () # Hello
print (a (45, 15)) # 60




#_________________________________________________________________________________________________________
# https://pythonworld.ru/osnovy/rabota-s-modulyami-sozdanie-podklyuchenie-instrukciyami-import-i-from.html
# http://pythonicway.com/python-modules
# Модули в Python https://pythoner.name/index.php/documentation/tutorial/modules




























#______________________________________________________________________________________________________________
#Стандартные модули
#Python поставляется с библиотекой стандартных модулей, описанных в отдельном документе,
# Справка по библиотеки Python (ниже "Справка по библиотеке"). Несколько модулей встроено в
# интерпретатор; они предоставляют доступ к операциям, которые не являются частью ядра языка,
# но тем не менее встроены в него, либо для повышения эффективности, либо для обеспечения доступа
# к примитивам операционной системы, таким как системные вызовы. Установка таких модулей является
# конфигурационной опцией, которая также зависит от используемой платформы.


#______________________________________________________________________________________________________________
# Различные модули
# sys - Системные параметры и функции
# https://docs.python.org/3/library/sys.html#sys.getsizeof
# Этот модуль обеспечивает доступ к некоторым переменным, используемым или поддерживаемым интерпретатором,
# и к функциям, которые сильно взаимодействуют с интерпретатором. Он всегда доступен.
# ________________________________
# Модуль os:  Модуль os предоставляет множество функций для работы с операционной системой, причём их поведение,
# как правило, не зависит от ОС, поэтому программы остаются переносимыми.
# Здесь будут приведены наиболее часто используемые из них. https://pythonworld.ru/moduli/modul-os.html
#_________________________________
# Модуль math:  Модуль math – один из наиважнейших в Python. Этот модуль предоставляет обширный
# функционал для работы с числами. https://pythonworld.ru/moduli/modul-math.html

